{"version":3,"sources":["custom Hooks/useinterval.ts","Components/Bank.tsx","Components/Settings.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["UseInterval","callback","delay","savedCallback","React","useRef","useEffect","current","id","setInterval","clearInterval","Banks","useState","clicks","SetClicks","farmers","SetFarmers","auto","SetAuto","bait","SetBait","buy","price","alert","enoughclicks","className","onClick","Settings","props","trigger","setColor","setTrigger","App","popup","setPopup","background","setBackground","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iQAgBeA,MAbf,SAAqBC,EAAoBC,GACrC,IAAMC,EAAgBC,IAAMC,OAAOJ,GACnCK,qBAAU,WACNH,EAAcI,QAAQN,IACxB,CAACA,IACHK,qBAAU,WACN,GAAc,OAAVJ,EAAJ,CAGA,IAAMM,EAAKC,aAAY,kBAAMN,EAAcI,YAAUL,GACrD,OAAO,kBAAKQ,cAAcF,OAC5B,CAACN,K,OCXA,SAASS,IACZ,MAAuBC,mBAAS,GAAhC,mBAAKC,EAAL,KAAYC,EAAZ,KACA,EAAyBF,mBAAS,GAAlC,mBAAKG,EAAL,KAAaC,EAAb,KACA,EAAmBJ,mBAAS,GAA5B,mBAAKK,EAAL,KAAUC,EAAV,KACA,EAAmBN,mBAAS,GAA5B,mBAAKO,EAAL,KAAUC,EAAV,KAmBE,SAASC,EAAIC,IATf,SAAsBA,GAClB,OAAGT,GAAQS,IAIPC,MAAM,uBACC,IAINC,CAAaF,KACdR,EAAUD,EAAOS,GACN,KAARA,GACCN,EAAWD,EAAQ,GAEZ,KAARO,GACCJ,EAAQD,EAAK,GAEN,MAARK,GACCF,EAAQD,EAAK,IAKzB,OAjCAnB,GACI,WACIc,EAAUD,EAAOE,EAAS,EAAEE,EAAO,EAAEE,KAAQ,KA+B9C,sBAAKM,UAAU,OAAf,oBACKZ,EACR,qBAAKY,UAAU,QAAf,SACI,wBAAQC,QAAS,WA9BrBZ,EAAUD,EA8BwB,IAA9B,yBAEJ,gCACA,uCAGA,gCACI,wBAAQY,UAAU,OAAOC,QAAS,kBAAIL,EAAI,KAA1C,8BADJ,qBAC+FN,KAE/F,gCACI,wBAAQU,UAAU,OAAOC,QAAS,kBAAIL,EAAI,KAA1C,8BADJ,uBACiGJ,KAEjG,gCACI,wBAAQQ,UAAU,OAAOC,QAAS,kBAAIL,EAAI,MAA1C,4BADJ,mBAC4FF,WCxD7F,SAASQ,EAASC,GACrB,OAAQA,EAAMC,QACV,sBAAKJ,UAAU,WAAf,UACI,sBAAKA,UAAU,WAAf,UAEA,wBAAQA,UAAU,UAAlB,+BACA,sBAAKA,UAAU,mBAAf,UACI,wBAAQC,QAAS,kBAAIE,EAAME,SAAS,SAApC,kBACA,wBAAQJ,QAAS,kBAAIE,EAAME,SAAS,QAApC,iBACA,wBAAQJ,QAAS,kBAAIE,EAAME,SAAS,UAApC,yBAGJ,wBAAQL,UAAU,QAAQC,QAAS,kBAAKE,EAAMG,YAAW,IAAzD,+BAEN,wBCOSC,MAhBf,WACE,MAAuBpB,oBAAS,GAAhC,mBAAOqB,EAAP,KAAaC,EAAb,KACA,EAAiCtB,mBAAS,SAA1C,mBAAOuB,EAAP,KAAkBC,EAAlB,KACA,OAAQ,sBAAKX,UAAWU,EAAhB,UACN,cAACxB,EAAD,IACA,wBAAQe,QAAS,kBAAIQ,GAAS,IAA9B,sBACA,cAAC,EAAD,CAAUL,QAASI,EAAOF,WAAYG,EAAUJ,SAAUM,QCE/CC,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.db358dce.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { useEffect } from \"react\";\r\n\r\nfunction UseInterval(callback:()=> void, delay:number | null) {\r\n    const savedCallback = React.useRef(callback);\r\n    useEffect(()=>{\r\n        savedCallback.current=callback\r\n    },[callback])\r\n    useEffect(()=>{\r\n        if (delay === null){\r\n            return\r\n        }\r\n        const id = setInterval(() => savedCallback.current(),delay)\r\n        return ()=> clearInterval(id)\r\n    },[delay])\r\n  }\r\nexport default UseInterval","\r\nimport { useState} from 'react';\r\nimport UseInterval from '../custom Hooks/useinterval';\r\nexport function Banks(): JSX.Element{\r\n    let [clicks,SetClicks]=useState(0);\r\n    let [farmers,SetFarmers]=useState(0);\r\n    let [auto,SetAuto]=useState(0);\r\n    let [bait,SetBait]=useState(0);\r\n    UseInterval(\r\n        ()=>{\r\n            SetClicks(clicks+farmers+(2*auto)+(5*bait))},1000,\r\n\r\n    )\r\n    function addclick(owned:number):void{\r\n        SetClicks(clicks+owned);\r\n        \r\n    }\r\n    function enoughclicks(price:number){\r\n        if(clicks>=price){\r\n            return true;\r\n        }\r\n        else{\r\n            alert('not enougth clicks')\r\n            return false;\r\n        }\r\n    }\r\n      function buy(price:number){\r\n          if(enoughclicks(price)){\r\n            SetClicks(clicks-price);\r\n            if(price===20){\r\n                SetFarmers(farmers+1);\r\n            }\r\n            if(price===50){\r\n                SetAuto(auto+1);\r\n            }\r\n            if(price===100){\r\n                SetBait(bait+1);\r\n            }\r\n          }\r\n          \r\n      }\r\n    return <div className=\"bank\">\r\n        Clicks:{clicks}\r\n        <div className=\"click\">\r\n            <button onClick={()=>addclick(1)}>Click Me!</button>\r\n        </div>\r\n        <div>\r\n        <div>\r\n           SHOP \r\n        </div>\r\n        <div>\r\n            <button className=\"farm\" onClick={()=>buy(20)}> Click Farms:20 </button>Click Farms owned:{farmers}\r\n        </div>\r\n        <div>\r\n            <button className=\"auto\" onClick={()=>buy(50)}> Autoclickers:50</button> Autoclickers owned:{auto}\r\n        </div>\r\n        <div>\r\n            <button className=\"bait\" onClick={()=>buy(100)}> Clickbait:100</button>Clickbait owned:{bait}\r\n        </div>\r\n        </div>\r\n    </div>\r\n}","import './Settings.css'\r\nexport function Settings(props: { trigger: any; setTrigger: (arg0: boolean) => void; setColor:(arg0:string)=>void }):JSX.Element{\r\n    return (props.trigger) ? (\r\n        <div className=\"settings\">\r\n            <div className=\"dropdown\">\r\n\r\n            <button className=\"dropbtn\">Background Color:</button>\r\n            <div className=\"dropdown-content\">\r\n                <button onClick={()=>props.setColor(\"blue\")}>blue</button>\r\n                <button onClick={()=>props.setColor(\"red\")}>red</button>\r\n                <button onClick={()=>props.setColor(\"green\")}>green</button>\r\n            </div>\r\n            </div>\r\n            <button className=\"close\" onClick={()=> props.setTrigger(false)}>Close Settings</button>\r\n        </div>\r\n    ):<div>\r\n    </div>\r\n}\r\nexport default Settings\r\n","import React, { useState } from 'react';\nimport './App.css';\nimport './Components/Settings.css'\nimport './Components/Bank.css'\nimport {Banks} from './Components/Bank';\nimport {Settings} from './Components/Settings'\nfunction App():JSX.Element {\n  const [popup,setPopup]=useState(false);\n  const [background,setBackground]=useState('white')\n  return (<div className={background}>\n    <Banks></Banks>\n    <button onClick={()=>setPopup(true)}>Settings</button>\n    <Settings trigger={popup} setTrigger={setPopup} setColor={setBackground}></Settings>\n    </div>\n    \n\n    \n    \n    \n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}